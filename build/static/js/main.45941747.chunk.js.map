{"version":3,"sources":["redux/typs.js","Containers/Post.js","Containers/FetchedPosts.js","redux/actions.js","Containers/PostForm.js","Containers/Posts.js","App.js","reportWebVitals.js","redux/postReducer.js","redux/rootReducer.js","index.js"],"names":["CREATE_POST","FETCH_POST","post","className","title","FetchedPosts","dispath","useDispatch","posts","useSelector","state","fetchedPost","length","map","Post","id","onClick","dispatch","a","fetch","response","json","type","payload","PostForm","props","submitHandler","e","preventDefault","trim","newPost","Date","now","toString","createPost","setState","changeInputHandler","persist","prev","target","name","value","onSubmit","this","style","width","onChange","placeholder","React","Component","mapDispathToProps","connect","syncPosts","color","textAlign","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","concat","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45941747.chunk.js","sourcesContent":["export const CREATE_POST = 'POST/CREATE_POST'\r\nexport const FETCH_POST = 'POST/FETCH_POST'\r\nexport const SHOW_LOADER = 'APP/SHOW_LOADER'\r\nexport const HIDE_LOADER = 'APP/HIDE_LOADER'","import React from 'react';\r\n\r\nexport default ({ post }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"title\">{post.title}</h5>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchPost } from '../redux/actions';\r\nimport Post from './Post';\r\n\r\nfunction FetchedPosts() {\r\n    const dispath = useDispatch()\r\n    const posts = useSelector((state) =>  state.posts.fetchedPost )\r\n    if(!posts.length) {\r\n        return <button onClick={() => dispath(fetchPost())} className=\"btn btn-primary text-center\">Загрузить</button>\r\n    }\r\n    return posts.map(post => <Post post={post} key={post.id} />)\r\n} \r\n\r\nexport default FetchedPosts;","import { CREATE_POST, FETCH_POST } from \"./typs\";\r\n\r\nexport default function createPost(post) {\r\n    return {\r\n        type: CREATE_POST,\r\n        payload: post\r\n    }\r\n}\r\n\r\nexport function fetchPost(post) {\r\n    return async dispatch => {\r\n        const response = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=5')\r\n        const json = await response.json()\r\n        dispatch({ type: FETCH_POST, payload: json})\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport createPost from '../redux/actions'\r\n\r\nclass PostForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title: ''\r\n        }\r\n    }\r\n\r\n    submitHandler = e => {\r\n        e.preventDefault()\r\n        const {title} = this.state\r\n\r\n        if(!title.trim()) {\r\n            return\r\n        }\r\n\r\n        const newPost = {\r\n            title, id: Date.now().toString()\r\n        }\r\n        this.props.createPost(newPost)\r\n        this.setState({ title: ''})\r\n\r\n    }\r\n\r\n    changeInputHandler = e => {\r\n        e.persist()\r\n        this.setState(prev => ({\r\n            ...prev, ...{\r\n                [e.target.name]: e.target.value\r\n            }\r\n        }))\r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.submitHandler} style={{ width: '50%' }}>\r\n                <div className=\"col-auto flex\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"title\"\r\n                        value={this.state.title}\r\n                        name=\"title\"\r\n                        onChange={this.changeInputHandler}\r\n                        placeholder=\"Add\" />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-success mt-2 right\">Add</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispathToProps =  {\r\n    createPost\r\n}\r\n\r\nexport default connect(null, mapDispathToProps) (PostForm)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Post from './Post';\r\n\r\nconst Posts = ({ syncPosts }) => {\r\n    if (!syncPosts.length) {\r\n        return <p className=\"pt-3\" style={{ color: 'red', textAlign: 'center' }}>We not have a posts</p>\r\n    }\r\n    return syncPosts.map(post => <Post post={post} key={post.id} />)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        syncPosts: state.posts.posts\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Posts)\r\n","import React from 'react'\n// import { Route, Switch } from 'react-router-dom'\nimport FetchedPosts from './Containers/FetchedPosts';\nimport PostForm from './Containers/PostForm';\nimport Posts from './Containers/Posts';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container pt-2\">\n        <div className=\"row p-3 m-0\">\n          <h4>PostForm</h4>\n          <PostForm />\n        </div>\n        <div className=\"row\">\n          <div className=\"col m-2 p-3 border\">\n            <h4>Posts</h4>\n            <Posts />\n          </div>\n          <div className=\"col m-2 p-3 border\">\n            <h4>Fetched Post</h4>\n            <FetchedPosts posts={[]} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CREATE_POST, FETCH_POST } from \"./typs\"\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    fetchedPost: []\r\n}\r\n\r\nexport const postReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_POST:\r\n            return { ...state, posts: state.posts.concat([action.payload]) }\r\n        case FETCH_POST:\r\n            return {...state, fetchedPost: action.payload }\r\n        default: return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { postReducer } from \"./postReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    posts: postReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { rootReducer } from './redux/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(\n      thunk\n    ),  \n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  ))\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}